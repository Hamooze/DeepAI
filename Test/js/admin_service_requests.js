document.addEventListener('DOMContentLoaded', () => {\n    console.log('Admin Service Requests JS Loaded');\n\n    const requestsTableContainer = document.getElementById('requestsTableContainer');\n    const statusFilter = document.getElementById('statusFilter');\n\n    function renderServiceRequests(filter = 'Pending Admin Approval') {\n        console.log(`ADMIN PAGE LOAD/RENDER (filter: ${filter}): Reading serviceRequests from localStorage. Current raw value:`, localStorage.getItem('serviceRequests')); // DEBUG\n        if (!requestsTableContainer) {\n            console.error('requestsTableContainer not found');\n            return;\n        }\n\n        let allServiceRequests = JSON.parse(localStorage.getItem('serviceRequests')) || [];\n        console.log('ADMIN PAGE LOAD/RENDER: Parsed allServiceRequests:', JSON.parse(JSON.stringify(allServiceRequests))); // DEBUG (deep copy for logging)\n        let filteredRequests = allServiceRequests;\n\n        if (filter !== 'all') {\n            filteredRequests = allServiceRequests.filter(req => req.status === filter);\n        }\n\n        if (filteredRequests.length === 0) {\n            requestsTableContainer.innerHTML = '<p class="no-requests">No service requests found matching the current filter.</p>';\n            return;\n        }\n\n        filteredRequests.sort((a, b) => new Date(b.requestDate) - new Date(a.requestDate));\n\n        let tableHTML = '<table class="requests-table"><thead><tr>\' +\n                        '<th>Req. ID</th><th>User</th><th>Car Plate</th><th>Service</th>\' +\n                        '<th>Requested</th><th>Preferred Date</th><th>Status</th><th>Actions</th></tr></thead><tbody>\';\n\n        filteredRequests.forEach(req => {\n            let statusClass = req.status.toLowerCase().split(' ').join('-');\n            if (statusClass === \'pending-admin-approval\') statusClass = \'pending\';\n            else if (statusClass === \'approved-by-admin\') statusClass = \'approved\';\n            else if (statusClass === \'rejected-by-admin\') statusClass = \'rejected\';\n            else if (statusClass === \'in-progress\') statusClass = \'in-progress\';\n            else if (statusClass === \'completed\') statusClass = \'completed\';\n\n            tableHTML += `\n                <tr>\n                    <td>${req.requestId ? req.requestId.slice(-6) : \'N/A\'}</td>\n                    <td>${req.userFullName || req.userEmail || \'N/A\'}</td>\n                    <td>${req.licensePlate || \'N/A\'}</td>\n                    <td>${req.serviceDetails || \'N/A\'}</td>\n                    <td>${req.requestDate ? new Date(req.requestDate).toLocaleDateString() : \'N/A\'}</td>\n                    <td>${req.preferredDate ? new Date(req.preferredDate).toLocaleDateString() : \'N/A\'}</td>\n                    <td><span class="status-badge status-${statusClass}">${req.status || \'N/A\'}</span></td>\n                    <td>`;\n            \n            if (req.status === 'Pending Admin Approval') {\n                tableHTML += `<button class="btn-action btn-approve" data-requestid="${req.requestId}">Approve</button>\n                              <button class="btn-action btn-reject" data-requestid="${req.requestId}">Reject</button>`;\n            } else if (req.status === 'Approved by Admin') {\n                tableHTML += `<button class="btn-action btn-complete" data-requestid="${req.requestId}" data-newstatus="In Progress">Mark In Progress</button>`;\n            } else if (req.status === 'In Progress') {\n                tableHTML += `<button class="btn-action btn-complete" data-requestid="${req.requestId}" data-newstatus="Completed">Mark Completed</button>`;\n            }\n            tableHTML += \'</td></tr>\';\n        });\n\n        tableHTML += \'</tbody></table>\';\n        requestsTableContainer.innerHTML = tableHTML;\n\n        // Add event listeners to action buttons\n        attachActionListeners();\n    }\n\n    function attachActionListeners() {\n        document.querySelectorAll('.requests-table .btn-action').forEach(button => {\n            button.addEventListener('click', handleRequestAction);\n        });\n    }\n\n    function handleRequestAction(event) {\n        const requestId = event.target.dataset.requestid;\n        let newStatus = \'\';\n\n        if (event.target.classList.contains('btn-approve')) {\n            newStatus = 'Approved by Admin';\n        } else if (event.target.classList.contains('btn-reject')) {\n            newStatus = 'Rejected by Admin';\n        } else if (event.target.classList.contains('btn-complete')) {\n            newStatus = event.target.dataset.newstatus; // 'In Progress' or 'Completed'\n        }\n\n        if (requestId && newStatus) {\n            updateRequestStatus(requestId, newStatus);\n        } else {\n            console.error('Action button missing requestId or newStatus interpretation failed.', event.target.dataset);\n        }\n    }\n\n    function updateRequestStatus(requestId, newStatus) {\n        let allServiceRequests = JSON.parse(localStorage.getItem('serviceRequests')) || [];\n        const requestIndex = allServiceRequests.findIndex(req => req.requestId === requestId);\n\n        if (requestIndex > -1) {\n            allServiceRequests[requestIndex].status = newStatus;\n            allServiceRequests[requestIndex].lastUpdated = new Date().toISOString(); // Add a timestamp for the update\n            localStorage.setItem('serviceRequests', JSON.stringify(allServiceRequests));\n            renderServiceRequests(statusFilter.value);\n            alert(`Request ${requestId.slice(-6)} status updated to: ${newStatus}`);\n        } else {\n            console.error(`Could not find service request with ID: ${requestId} to update.`);\n            alert('Error: Could not find the service request to update.');\n        }\n    }\n\n    if (statusFilter) {\n        statusFilter.addEventListener('change', function() {\n            renderServiceRequests(this.value);\n        });\n    } else {\n        console.error('statusFilter element not found');\n    }\n\n    // Initial render\n    renderServiceRequests(statusFilter ? statusFilter.value : 'Pending Admin Approval');\n}); 